name: Build iOS Development

on:
  push:
    branches:
      - develop_ci
      # - develop

env:
  flutter_channel: 'stable'
  flutter_version: '2.2.3'

jobs:
  build:
    name: Test, Build & Deploy
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      # - name: Copy google services plist
      #   env:
      #     DEVELOPMENT_IOS_GOOGLE_SERVICES_PLIST: ${{ secrets.DEVELOPMENT_IOS_GOOGLE_SERVICES_PLIST }}
      #   run: echo $DEVELOPMENT_IOS_GOOGLE_SERVICES_PLIST > ./ios/Configuration/development/GoogleService-Info.plist
      - name: Copy service account
        env:
          DEVELOPMENT_FIREBASE_SERVICE_ACCOUNT: ${{ secrets.DEVELOPMENT_FIREBASE_SERVICE_ACCOUNT }}
        run: echo $DEVELOPMENT_FIREBASE_SERVICE_ACCOUNT  > ./ios/service-account.json
      - name: Copy app store connect api key
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: echo $APP_STORE_CONNECT_API_KEY > ./ios/auth_key.p8
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}
      # - name: Test & Build
      #   run: |
      #     chmod +x build_runner_rebuild.sh
      #     chmod +x intl.sh
      #     ./build_runner_rebuild.sh
      #     ./intl.sh
      #     flutter test
      #     flutter build ios --release --flavor development --no-codesign --build-number=${{ github.run_number }}
      - name: Test & Build
        run: |
          chmod +x easy_localization.sh
          ./easy_localization.sh
          chmod +x build_runner_rebuild.sh
          ./build_runner_rebuild.sh
          flutter build ios --release --flavor development --no-codesign --build-number=${{ github.run_number }}
      - name: Install Firebase
        run: npm install -g firebase-tools
      - name: Install bundler
        run: gem install bundler
      - name: Release app to Firebase
        env:
          DEVELOPMENT_IOS_FIREBASE_APP_ID: ${{ secrets.DEVELOPMENT_IOS_FIREBASE_APP_ID }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.FASTLANE_MATCH_GIT_BASIC_AUTHORIZATION }}
        run: |
          cd ios/
          export GOOGLE_APPLICATION_CREDENTIALS=service-account.json
          bundle install
          bundle exec fastlane build_fad_ios_alpha
          bundle exec fastlane deploy_fad_ios_alpha