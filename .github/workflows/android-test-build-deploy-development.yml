name: Build Android Development

on:
  push:
    branches:
      - master
      # - develop_ci
      # - develop

env:
  flutter_channel: 'stable'
  flutter_version: '2.0.1'

jobs:
  build:
    name: Test, Build & Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Copy google services json
        env:
          DEVELOPMENT_ANDROID_GOOGLE_SERVICES_JSON: ${{ secrets.DEVELOPMENT_ANDROID_GOOGLE_SERVICES_JSON }}
        run: echo $DEVELOPMENT_ANDROID_GOOGLE_SERVICES_JSON > ./android/app/google-services.json
      - name: Copy development service account
        env:
          DEVELOPMENT_FIREBASE_SERVICE_ACCOUNT: ${{ secrets.DEVELOPMENT_FIREBASE_SERVICE_ACCOUNT }}
        run: echo $DEVELOPMENT_FIREBASE_SERVICE_ACCOUNT > ./android/service-account.json
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}
      # - name: Test & Build
      #   run: |
      #     chmod +x build_runner_rebuild.sh
      #     chmod +x intl.sh
      #     ./build_runner_rebuild.sh
      #     ./intl.sh
      #     flutter test
      #     flutter build apk --debug --flavor development --build-number=${{ github.run_number }}
      - name: Test & Build
        run: |
          chmod +x easy_localization.sh
          ./easy_localization.sh
          chmod +x build_runner_rebuild.sh
          ./build_runner_rebuild.sh
          flutter build apk --debug --flavor development --build-number=${{ github.run_number }}
      - name: Upload artifiacts
        uses: actions/upload-artifact@v1
        with:
          name: app-development-debug-apk
          path: build/app/outputs/apk/development/debug/app-development-debug.apk
      - name: Install Firebase
        run: npm install -g firebase-tools
      - name: Install bundler
        run: gem install bundler
      - name: Release app to Firebase
        env:
          DEVELOPMENT_ANDROID_FIREBASE_APP_ID: ${{ secrets.DEVELOPMENT_ANDROID_FIREBASE_APP_ID }}
        run: |
          cd android/
          export GOOGLE_APPLICATION_CREDENTIALS=service-account.json
          bundle install
          bundle exec fastlane deploy_development_to_firebase